myP5JSの更新履歴
少しずつ変えていって
スマホ依存バグの原因を突き止める。

手始めにimageを2Dに特化させる

線のグラデーション導入しました
変化なしです
んー...

ここまでは大丈夫。あと2つですかね。
ベジエとクワドラは後回しでいい。先に面の方。これは変えるところが少ないので...
問題ないはずなんだけど...
テスト項目はまあ、もう知ってると思うけど、頂点色ライティング、ジオメトリの頂点色。とりあえずこの2つ。
というか自分で用意した6つ全部？あ、もうあるわ。これ全部試せばいいのね。

testおわりました～
pushおわりました。さて、どうなるか...
どうなるかなぁ

はい。消えました。やっぱね。
これが原因だ...
とはいえ...どうするかな。
スマホでしか起きてない以上、プログラム内のどこいじればいいのか、ねぇ。むずかしいよね。

ちぇ。
まあ、戻せばいいんだけど。
shaderかなぁ。でもshader戻すのかったるいな。一旦...uniformにしてみる？あるいは...
甘かった場所があるんだろう。

原因判明しました。スマホの方、頂点色でエラー出ますね。
頂点色実装後にエラーが出ました。パソコンでは出ません。
リリース前に直さないとえらいことになりますね...
パソコンでは出ないってのが厄介。やばいね。
imageの中のあそこをいじればいい、begin～endShapeの。ということは、おそらくあれのUVの...
メインの方はshader分岐はいじってないんですよ。あくまで、あの、フラグ渡してるだけで。フラグ？
単色か頂点色かってとこです。プリミティブが消えますよね。おそらく何かしらの影響で何かしらのフラグがオフになり、
その後trueにする機構が働かなくなる。そのあたりかと。

そうですね。uvが絡むbegin～endShapeが原因ですねぇ。これがあると、何らかの...
色が黒くなるなら背景のところにちゃんと黒いシルエットが映る、それが無いということは色の出力が無いのではなく...
たとえば？texture描画になっているがtextureが使えないので表示されない、とか？

そういうわけです。どうしようね。

透明度が0だと表示されないので透明度が0になってる可能性があります。
使われているのがphongShaderなのは間違いないです
そこで
一旦これを単色シェーダにします
今のスケッチの場合影響はないです。
これで様子を見ます。

なんなら真っ白とかでもいいんだけどね

ビンゴですね
なくなりました
というわけであそこなぜか知らないけどフラグが戻らず存在しないはずの頂点色が使われてしまっていますね
それで透明になってしまったようです
なぜ？スマホだけフラグが戻らず？しかもなぜimage関数内のbegin～endShapeが？関係してしまっているのか？？
なぜあそこをgeometryにするとうまくいくのか？geometryの描画にはRetainedが使われている。begin～endShapeはimmediateだ、で。
それがなぜプリミティブの描画に関係してくる？フラグの重複？レンダラーの...レンダラー？共通？？
すべてRetainedで揃うから、か？すべてあのフラグはfalse.
そして...immediateではあのフラグは常にtrueで...だよね。常にtrue. でもtextureがあればtextureが使われるのだ。そしてtextureが無い場合に
頂点色と単色の二択になるが、その際あのフラグが立っているとそっちが優先、しかしそれは、...計算されるからさぁ、...？？
shader取得前に計算されるべ？そこになんか入ってて、そのせいで、フラグが立ったまま...

えーーーーと。
あれ？
スマホ依存バグ...あれ？？

バグ出ました
というか、んー、？？

グラデーション正方形を追加したら
それ以外のプリミティブがすべて消滅しました
しかもimageを使っていないにもかかわらず、です。？？？
おそらく、まちがいなく、uUseVertexColorがtrueで描画されてるんですよ、ね。うん。...
違いますね
あそこがaVertexColorになる場合の見た目は灰色っぽいんですよ
とはいえあそこがuMaterialColorだと問題は生じない...となると原因はFragの方か？

isTextureがtrueであるがゆえにnullで...
となるとisTextureか？あれがなぜかtrueで...？
それも違う。そういう見た目じゃない。原因は...？？？消える？shaderが実行されていない？ドローコール自体が？

そういえばグラデーションのプリミティブは普通に描画されていますね

背景や文字を表示しないようにしてもだめでしたね。ん？

デフォルトをfalseにしました。それでもスマホだと、消えますね。はい。何なんだ...
パソコンでは相変わらずすべて描画されます。どのフラグを見ればいいんだ...

今スマホで調べたら最初のループでは4つ全部描画されますね。2ループ目以降で表示されてないです。
最初のループの後なんかあったみたいです。_updateでなんかいじる必要があるか？
まあこういうバグはよくあるんだけどね...おそらく迷路のあれも最初のループは表示されるのでしょう。んー...
つってもフラグ立てて普通に描画してるだけだが...？

あ、そうだ、なぜかplaneには影響ないんだよ。何で？？planeだけ影響ないんだよな...
はい。noLoopで最初のループだけにしたらtextureついたgeometryの描画の後boxが消滅してますね。だんだん輪郭が見えてきました。
つまりvertex colorの付いたなんかを描画すると（それがplaneであったとしても）そのあとの
なぜかplaneではなくboxとかtorusが消える、しかもスマホだけで。そういう謎の現象が起きているようです。

planeとboxたちの違いは何なのか、またなぜ頂点色の付いたgeometryを描画するとやばいのか。
begin～endでなんか描画するのも頂点色描画だから同じことだ。同じこと...スマホの最適化か？あれか？前にも遭遇したが...

つまりtexture云々はあまり関係なくて、...ということ？はい。そうです。textureは関係ないです。
というわけで、はっきりしてきました。まず、現象は頂点彩色のimmediateもしくはretainedを描画した直後に起こると。で、
考えが浅かったな...しかしドローコールは実行されているのだろうか？
planeに影響ないのも不可解。

頂点色の...消えないですね。
頂点色ならboxでも消えない...というかboxというかポリゴンですけど。
んー。んーー？？つまり、vertexColorsになんか入ってるやつをRetainedにせよImmediateにせよ一回でも描画すると、以降は
vertexColorsに何も入ってないやつらはすべてアウトになる...？？それはRetainedの...もしくはtextureもか。textureであそこがすっからかん。それもだめ。
そういうの以外、一切描画できなくなるみたい。Immediateは常にあそこなんか入ってるからね。...Immediateは常にそうなのよね...texture使う場合でも...
ていうかtextureはあれ、vColorを頂点色にしたうえでtextureのが採用されるのよ。

そうですね。単色描画しようとしてるやつらは軒並みアウトになってます。どゆこと。planeも？
planeも単色描画だけど描画されるべ。ああーーー！！

仮説は正しいようです。スマホだと、一回でもvertexColorsになんか入ってるものを描画すると、それ以降はvertexColorsがすっからかんの
オブジェクトはplaneを除いて一切描画されなくなります。なぜplaneだけ描画されるのか？？調査中です。
imageが悪いのではなくてその中で...ん？
あ、なるほど。
あのプログラム、「vertexColorsに何か入ってるやつが一切出てこない」んだ。平和な世界。それで全部滞りなく描画される。
つまり。
スマホ依存のバグ、未解決！！！何にも解決してなかった！

もし。
もし、vertexColorsに何も入ってない場合...単色かtextureの二択になるわけだが、
その場合仮にvertexColorsに単色がみっちり入っていたとしても
それって同じ結果になるわけですけど
それでもtextureがあればそっちが優先されるので問題ない
問題が生じているのは今のところ「RetainedModeのvertexColorsがすっからかんのジオメトリー」ですので。
だからあそこで「0の場合は単色で埋める」ってやれば問題ない？？どっち？Retainedだけ。
strokeでも同じ問題が生じてそうで怖い

というわけでdrawBuffersのdoFillのときの処理を

if (geometry.model.vertexColors.length > 0) {
  this._useVertexColor = true;
} else {
  this._useVertexColor = false;
  for (let i = 0; i < geometry.model.vertices.length; i++) {
    geometry.model.vertexColors.push(...this.curFillColor);
  }
}
// こうするの？？とりあえずこれで試してみる。
//this._useVertexColor = (geometry.model.vertexColors.length > 0);

こうしました。結果、意図的にvertexColorsの中身を空にしたgeometry以外はすべて描画されました。スマホでも。
しかしあれの場合は...

vertexColorsの中身が空のgeometryに対してはなぜかこの方法でもだめでした。なぜ？？？？
